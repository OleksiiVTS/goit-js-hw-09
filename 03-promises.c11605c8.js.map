{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAoBpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,IAAM,CAACC,SAAAN,EAAUO,MAAAN,GACD,IAAIO,SAAQ,CAACC,EAASC,KAC9BR,EACFO,EAAQJ,KAERK,EAAOL,IAAI,IAKhBM,MAAK,EAACL,SAACA,EAAQC,MAAEA,MAChBb,EAAAkB,OAAOC,QAAQ,uBAAqBP,QAAiBC,MAAU,IAEhEO,OAAM,EAACR,SAACA,EAAQC,MAAEA,MACjBb,EAAAkB,OAAOG,QAAQ,sBAAoBT,QAAeC,MAAU,G,CAnChEX,EAAKoB,iBAAiB,UAEtB,SAA6BC,GAC3BA,EAAMC,iBACN,MAAMX,MAACA,EAAKY,KAAEA,EAAIC,OAAEA,GAQbC,SAAW,CAChBd,MAAOe,OAAO1B,EAAK2B,SAAShB,MAAMiB,OAClCL,KAAMG,OAAO1B,EAAK2B,SAASJ,KAAKK,OAChCJ,OAAQE,OAAO1B,EAAK2B,SAASH,OAAOI,QAVtC,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAQK,GAAG,EAAG,CAChC,MAAMC,EAAOnB,EAASkB,EAAIN,EAC1BQ,YAAW,IAAM5B,EAAc0B,EAAE,EAAGC,IAAOA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener(\"submit\", beforeCreatePromise)\n\nfunction beforeCreatePromise(event) {\n  event.preventDefault()\n  const {delay, step, amount} = getInputValue();\n  for (let i = 0; i < amount; i+=1) {\n    const time = delay + (i * step)\n    setTimeout(() => createPromise(i+1, time), time)\n  }\n};\n\nfunction getInputValue() {\n  return dataForm = {\n    delay: Number(form.elements.delay.value),\n    step: Number(form.elements.step.value),\n    amount: Number(form.elements.amount.value),\n  };\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  obg = {position, delay};\n  const promise = new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        resolve(obg);\n      } else {\n        reject(obg);\n      }\n  });\n\n  promise\n  .then(({position, delay}) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({position, delay}) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n};\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","obg","position","delay","Promise","resolve","reject","then","Notify","success","catch","failure","addEventListener","event","preventDefault","step","amount","dataForm","Number","elements","value","i","time","setTimeout"],"version":3,"file":"03-promises.c11605c8.js.map"}